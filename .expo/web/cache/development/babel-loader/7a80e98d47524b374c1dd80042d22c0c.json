{"ast":null,"code":"var _jsxFileName = \"/home/rotimi-blacc/Desktop/landing page /bank_landing/App.tsx\";\nimport React from \"react\";\nimport { Text, HStack, Switch, useColorMode, NativeBaseProvider, extendTheme } from \"native-base\";\nimport Headers from \"./components/AppBar/AppBar\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\"\n};\nexport var theme = extendTheme({\n  config: config\n});\nexport default function App() {\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Headers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ToggleDarkMode() {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  return React.createElement(HStack, {\n    space: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Dark\"), React.createElement(Switch, {\n    isChecked: colorMode === \"light\",\n    onToggle: toggleColorMode,\n    \"aria-label\": colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Light\"));\n}","map":{"version":3,"sources":["/home/rotimi-blacc/Desktop/landing page /bank_landing/App.tsx"],"names":["React","Text","HStack","Switch","useColorMode","NativeBaseProvider","extendTheme","Headers","config","useSystemColorMode","initialColorMode","theme","App","ToggleDarkMode","colorMode","toggleColorMode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAGEC,MAHF,EAMEC,MANF,EAOEC,YAPF,EAQEC,kBARF,EASEC,WATF,QAYO,aAZP;AAcA,OAAOC,OAAP;AAGA,IAAMC,MAAM,GAAG;AACbC,EAAAA,kBAAkB,EAAE,KADP;AAEbC,EAAAA,gBAAgB,EAAE;AAFL,CAAf;AAMA,OAAO,IAAMC,KAAK,GAAGL,WAAW,CAAC;AAAEE,EAAAA,MAAM,EAANA;AAAF,CAAD,CAAzB;AAKP,eAAe,SAASI,GAAT,GAAe;AAC5B,SACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAGD,SAASC,cAAT,GAA0B;AACxB,sBAAuCT,YAAY,EAAnD;AAAA,MAAQU,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,eAAnB,iBAAmBA,eAAnB;;AACA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,UAAU,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAED,SAAS,KAAK,OAD3B;AAEE,IAAA,QAAQ,EAAEC,eAFZ;AAGE,kBACED,SAAS,KAAK,OAAd,GAAwB,qBAAxB,GAAgD,sBAJpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CADF;AAaD","sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  Link,\n  HStack,\n  Center,\n  Heading,\n  Switch,\n  useColorMode,\n  NativeBaseProvider,\n  extendTheme,\n  VStack,\n  Code,\n} from \"native-base\";\nimport NativeBaseIcon from \"./components/NativeBaseIcon\";\nimport Headers from \"./components/AppBar/AppBar\";\n\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\",\n};\n\n// extend the theme\nexport const theme = extendTheme({ config });\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n  interface ICustomTheme extends MyThemeType {}\n}\nexport default function App() {\n  return (\n    <NativeBaseProvider>\n      <Headers/>\n    </NativeBaseProvider>\n  );\n}\n\n// Color Switch Component\nfunction ToggleDarkMode() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <HStack space={2} alignItems=\"center\">\n      <Text>Dark</Text>\n      <Switch\n        isChecked={colorMode === \"light\"}\n        onToggle={toggleColorMode}\n        aria-label={\n          colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\"\n        }\n      />\n      <Text>Light</Text>\n    </HStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}