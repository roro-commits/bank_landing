{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rotimi-blacc/Desktop/landing page /bank_landing/components/AppBar/center-nav-button.tsx\";\n\nimport React, { useState } from \"react\";\nimport { Box, Button, VStack, Text, Stack } from 'native-base';\nexport var WebButton = function WebButton(_ref) {\n  var description = _ref.description;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonPressed = _useState2[0],\n      SetbuttonPressed = _useState2[1];\n\n  return React.createElement(VStack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    colorScheme: \"white\",\n    w: \"100%\",\n    _web: {\n      bg: \"white\",\n      _text: {\n        color: \"coolGray.500\",\n        fontWeight: \"bold\"\n      },\n      _pressed: {\n        bg: \"white\",\n        _text: {\n          color: \"coolGray.600\"\n        }\n      }\n    },\n    _android: {\n      bg: \"white\",\n      _text: {\n        color: \"coolGray.500\",\n        fontWeight: \"bold\"\n      },\n      _pressed: {\n        bg: \"white\",\n        _text: {\n          color: \"coolGray.600\"\n        }\n      }\n    },\n    onPress: function onPress() {\n      return SetbuttonPressed(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, description), React.createElement(Box, {\n    bg: {\n      md: true === buttonPressed ? \"primary.200\" : \"white\"\n    },\n    maxHeight: {\n      md: 1,\n      base: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"  \")));\n};\nexport default function () {\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack, {\n    space: {\n      md: 2\n    },\n    direction: {\n      md: \"row\",\n      sm: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, React.createElement(WebButton, {\n    description: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), React.createElement(WebButton, {\n    description: \"About\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), React.createElement(WebButton, {\n    description: \"Contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), React.createElement(WebButton, {\n    description: \"Blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), React.createElement(WebButton, {\n    description: \"Careers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/rotimi-blacc/Desktop/landing page /bank_landing/components/AppBar/center-nav-button.tsx"],"names":["React","useState","Box","Button","VStack","Text","Stack","WebButton","description","buttonPressed","SetbuttonPressed","bg","_text","color","fontWeight","_pressed","md","base","sm"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAuCC,MAAvC,EAA+CC,IAA/C,EAA6DC,KAA7D,QAA0E,aAA1E;AAOA,OAAO,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAC3D,kBAA0CP,QAAQ,CAAU,KAAV,CAAlD;AAAA;AAAA,MAAOQ,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD;AACI,IAAA,WAAW,EAAC,OADhB;AAEI,IAAA,CAAC,EAAE,MAFP;AAGA,IAAA,IAAI,EAAE;AAEFC,MAAAA,EAAE,EAAE,OAFF;AAGFC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,cADJ;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAHL;AAOFC,MAAAA,QAAQ,EAAE;AAENJ,QAAAA,EAAE,EAAE,OAFE;AAGNC,QAAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE;AADJ;AAHD;AAPR,KAHN;AAoBA,IAAA,QAAQ,EAAE;AAENF,MAAAA,EAAE,EAAE,OAFE;AAGNC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,cADJ;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAHD;AAONC,MAAAA,QAAQ,EAAE;AAENJ,QAAAA,EAAE,EAAE,OAFE;AAGNC,QAAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE;AADJ;AAHD;AAPJ,KApBV;AAsCA,IAAA,OAAO,EAAE;AAAA,aAAOH,gBAAgB,CAAC,IAAD,CAAvB;AAAA,KAtCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwCKF,WAxCL,CAFJ,EA6CQ,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAI;AAACQ,MAAAA,EAAE,EAAC,SAASP,aAAT,GAAyB,aAAzB,GAAuC;AAA3C,KAAX;AAAgE,IAAA,SAAS,EAAE;AAACO,MAAAA,EAAE,EAAC,CAAJ;AAAMC,MAAAA,IAAI,EAAC;AAAX,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CA7CR,CADJ;AAuDH,CAzDM;AA4DP,eAAe,YAAY;AAEvB,SACI,0CACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACD,MAAAA,EAAE,EAAC;AAAJ,KAAd;AAAuB,IAAA,SAAS,EAAE;AAACA,MAAAA,EAAE,EAAC,KAAJ;AAAUE,MAAAA,EAAE,EAAC;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ,CADJ;AAcH","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Button, Divider, HStack, VStack, Text, Hidden, Stack } from 'native-base'\nimport { border, color } from \"native-base/lib/typescript/theme/styled-system\";\n\ninterface props {\n    description?: String | \"Button\"\n}\n\nexport const WebButton: React.FC<props> = ({ description }) => {\n    const [buttonPressed, SetbuttonPressed] = useState<boolean>(false)\n    return (\n        <VStack>\n            \n            <Button \n                colorScheme=\"white\"\n                w={\"100%\"}\n            _web={{\n                // below props will only be applied on 'web' platform\n                bg: \"white\",\n                _text: {\n                    color: \"coolGray.500\",\n                    fontWeight: \"bold\"\n                },\n                _pressed: {\n                    // below props will only be applied on button is pressed\n                    bg: \"white\",\n                    _text: {\n                        color: \"coolGray.600\",\n                    }\n                },\n               \n\n            }}\n            _android={{\n                // below props will only be applied on 'web' platform\n                bg: \"white\",\n                _text: {\n                    color: \"coolGray.500\",\n                    fontWeight: \"bold\"\n                },\n                _pressed: {\n                    // below props will only be applied on button is pressed\n                    bg: \"white\",\n                    _text: {\n                        color: \"coolGray.600\",\n                    }\n                },\n               \n\n            }}\n            \n            onPress={() =>  SetbuttonPressed(true)}\n            >\n                {description}\n            </Button>\n            \n                <Box bg = {{md:true === buttonPressed ? \"primary.200\":\"white\"}} maxHeight={{md:1,base:0}}>\n                    <Text>  </Text>\n                </Box>\n\n            \n\n        </VStack>\n\n    );\n}\n\n\nexport default function () {\n\n    return (\n        <>\n            <Box >\n                <Stack space={{md:2}}  direction={{md:\"row\",sm:\"column\"}}  >\n                    <WebButton description={\"Home\"}   />\n                    <WebButton description={\"About\"} />\n                    <WebButton description={\"Contact\"} />\n                    <WebButton description={\"Blog\"} />\n                    <WebButton description={\"Careers\"} />\n                </Stack>\n            </Box>\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}